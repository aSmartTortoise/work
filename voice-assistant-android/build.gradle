// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
buildscript {

    ext {
        kotlin_version = '1.8.0'
    }
    repositories {
//        //需要升级gradle8.2
//        mavenDeployer{
//            snapshotRepository(url:MAVEN_VOYAH_VOICE_RELEASE_URL){
//                authentication(userName:NEXUS_USERNAME,passwrod:NEXUS_PASSWORD)
//            }
//            snapshotRepository(url:MAVEN_VOYAH_VOICE_SNAPSHOTS_URL){
//                authentication(userName:NEXUS_USERNAME,passwrod:NEXUS_PASSWORD)
//            }
//        }
        maven {
            url 'http://nexus.voyah.cn/repository/maven-releases/'
            allowInsecureProtocol true
            credentials {
                username "developer"
                password "voyah@1qwz"
            }
        }
        maven {
            url 'http://nexus.voyah.cn/repository/maven-snapshots/'
            allowInsecureProtocol true
            credentials {
                username "developer"
                password "voyah@1qwz"
            }
        }

        maven {
            allowInsecureProtocol true
            url = 'http://10.223.105.162:8084/repository/voyah-release/'
            credentials {
                username 'nexus_dn'
                password 'nexus123'
            }
        }

        maven {
            url 'https://maven.aliyun.com/repository/google/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin/'
        }
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.1.0"
        classpath 'com.github.kezong:fat-aar:1.3.8'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.22"
    }
}

allprojects {
//    gradle.projectsEvaluated {
//        tasks.withType(JavaCompile) {
//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
//        }
//    }

    repositories {
        mavenCentral()
//        mavenDeployer{
//            snapshotRepository(url:MAVEN_VOYAH_VOICE_RELEASE_URL){
//                authentication(userName:NEXUS_USERNAME,passwrod:NEXUS_PASSWORD)
//            }
//            snapshotRepository(url:MAVEN_VOYAH_VOICE_SNAPSHOTS_URL){
//                authentication(userName:NEXUS_USERNAME,passwrod:NEXUS_PASSWORD)
//            }
//        }
        maven {
            url 'http://nexus.voyah.cn/repository/maven-releases/'
            allowInsecureProtocol true
            credentials {
                username "developer"
                password "voyah@1qwz"
            }
        }
        maven {
            url 'http://nexus.voyah.cn/repository/maven-snapshots/'
            allowInsecureProtocol true
            credentials {
                username "developer"
                password "voyah@1qwz"
            }
        }
        maven {
            allowInsecureProtocol true
            url = 'http://10.223.105.162:8084/repository/voyah-release/'
            credentials {
                username 'nexus_dn'
                password 'nexus123'
            }
        }

        maven {
            allowInsecureProtocol true
            url = 'http://10.223.105.162:8084/repository/voyah-snapshots/'
            credentials {
                username 'nexus_dn'
                password 'nexus123'
            }
        }

        maven {
            url 'https://maven.aliyun.com/repository/google/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin/'
        }
        maven {
            url "https://mvn.getui.com/nexus/content/repositories/releases/"
        }
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        flatDir {
            dirs project(':base-car').file('libs')
        }
        if (project.carmodule == 'h37b') {
            flatDir {
                dirs project(':h37a').file('libs')
            }
        } else {
            flatDir {
                dirs project(':' + project.carmodule).file('libs')
            }
        }
        flatDir {
            dirs project(':voice').file('libs')
        }
        flatDir {
            dirs project(':common').file('libs')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}